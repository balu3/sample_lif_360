---
AWSTemplateFormatVersion: '2010-09-09'
Description: Account onboarding cross account IAM roles and Policies
Parameters:
  AccountAlias:
    Description: Enter your account alias name
    Type: String
Resources:
  IdentityProvider:
    Type: Custom::IdentityProvider
    Properties:
      ServiceToken: !GetAtt ProviderCreator.Arn
      Region: !Ref "AWS::Region"
      Metadata: !Sub |
          <?xml version="1.0" encoding="UTF-8" standalone="no"?> <md:EntityDescriptor xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata" entityID="https://accounts.google.com/o/saml2?idpid=C03hataxg" validUntil="2023-05-08T20:37:51.000Z"> <md:IDPSSODescriptor WantAuthnRequestsSigned="false" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol"> <md:KeyDescriptor use="signing"> <ds:KeyInfo xmlns:ds="http://www.w3.org/2000/09/xmldsig#"> <ds:X509Data> <ds:X509Certificate>MIIDdDCCAlygAwIBAgIGAWNGn+eXMA0GCSqGSIb3DQEBCwUAMHsxFDASBgNVBAoTC0dvb2dsZSBJ bmMuMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MQ8wDQYDVQQDEwZHb29nbGUxGDAWBgNVBAsTD0dv b2dsZSBGb3IgV29yazELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWEwHhcNMTgwNTA5 MjAzNzUxWhcNMjMwNTA4MjAzNzUxWjB7MRQwEgYDVQQKEwtHb29nbGUgSW5jLjEWMBQGA1UEBxMN TW91bnRhaW4gVmlldzEPMA0GA1UEAxMGR29vZ2xlMRgwFgYDVQQLEw9Hb29nbGUgRm9yIFdvcmsx CzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A MIIBCgKCAQEAuPb6HE91NxSUByyc95G43S41BqXgDHiAr5pyh3rwlFaIr3RZoEXvnjBRIm7xPpWo Er8cqjbtbir27ZVVOrszUwqarTw0hZ23p+CfeJVYTjdwU0kCVAwb16Gs3PoFdpuRNYcW54ps+MqQ 0Qxf37ZAjNMk/UMaizakfLTHRhqtCwVWAerwnrnWjL2hVrXB/oSMaLduMg2plCgnNv4KJo8SvEcP 5NcIDjzWetobcPzb4MWMrIrmGKxZdnHSBnNi29RLOLca1WowacTN7vcyxBMu0jAv4vYHMzBVxoZw xhk24CCnNBNgtwY2tcVu2Ndd8rB1FNOneUvTYEVjjrv2a+XOjwIDAQABMA0GCSqGSIb3DQEBCwUA A4IBAQB8JQq6zUy7nWnzmCBU8nqTNjkA4BCCK19EIadftQF0V6LSnZfqpUQrttPG0E9V54R7KGoG hBw7XLW6tPoAzR2DCF7fMuNog70Uv3B2LUvpJ1vuNQrddFbMqxah21Zm3nP/DeaDRIvfFS+bw7iq VjnAG1Qfg8KPkJUkIxqaOBBk7gsb6JK5BS6jMRJNZSjMGI05Q3x7J7ZXOZ/MfeKQiO89/h98XkiB lvep1EJOvfmC86+1mvffJAkELORcioTh99a/voqYFtqQHrYDzDEyaRiGSAY4fMHPacIEYljKz5/r fb7H7XWQ8X9tDl0fgY2N1TgmYUwxwL0SIyKoiK39witH</ds:X509Certificate> </ds:X509Data> </ds:KeyInfo> </md:KeyDescriptor> <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat> <md:SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://accounts.google.com/o/saml2/idp?idpid=C03hataxg"/> <md:SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://accounts.google.com/o/saml2/idp?idpid=C03hataxg"/> </md:IDPSSODescriptor> </md:EntityDescriptor>
      Name: "Gsuite"
  ProviderCreator:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python2.7
      Handler: index.lambda_handler
      MemorySize: 128
      Role: !GetAtt ProviderCreatorLambdaExecutionRole.Arn
      Timeout: 30
      Code:
        ZipFile: !Sub |

          import boto3
          from botocore.exceptions import ClientError
          import json
          import cfnresponse

          iam = boto3.client("iam")

          def create_provider(name, doc):
            try:
              resp = iam.create_saml_provider(SAMLMetadataDocument=doc,Name=name)
              return(True, resp['SAMLProviderArn'])
            except Exception as e:
              return (False, "Cannot create SAML provider: " + str(e))

          def delete_provider(arn):
            try:
              resp = iam.delete_saml_provider(SAMLProviderArn=arn)
              return (True, "SAML provider with ARN " + arn + " deleted")
            except ClientError as e:
              if e.response['Error']['Code'] == "NoSuchEntity":
                # no need to delete a thing that doesn't exist
                return (True, "SAML provider with ARN " + arn + " does not exist, deletion succeeded")
              else:
                return (False, "Cannot delete SAML provider with ARN " + arn + ": " + str(e))
            except Exception as e:
              return (False, "Cannot delete SAML provider with ARN " + arn + ": " + str(e))

          def update_provider(arn, doc):
            # Need to create the ARN from the name
            arn = "arn:aws:iam::" + context.invoked_function_arn.split(':')[4] + ":saml-provider/" + name
            try:
              resp = iam.update_saml_provider(SAMLMetadataDocument=doc, SAMLProviderArn=arn)
              return (True, "SAML provider " + arn + " updated")
            except Exception as e:
              return (False, "Cannot update SAML provider " + arn + ": " + str(e))

          def lambda_handler(event, context):
            provider_xml = event['ResourceProperties']['Metadata']
            provider_name = event['ResourceProperties']['Name']
            # create a default ARN from the name; will be overwritten if we are creating
            provider_arn = "arn:aws:iam::" + context.invoked_function_arn.split(':')[4] + ":saml-provider/" + provider_name

            if event['RequestType'] == 'Create':
              res, provider_arn = create_provider(provider_name, provider_xml)
              reason = "Creation succeeded"
            elif event['RequestType'] == 'Update':
              res, reason = update_provider(provider_arn, provider_xml)
            elif event['RequestType'] == 'Delete':
              res, reason = delete_provider(provider_arn)
            else:
              res = False
              resp = "Unknown operation: " + event['RequestType']

            responseData = {}
            responseData['Reason'] = reason
            if res:
              cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData, provider_arn)
            else:
              cfnresponse.send(event, context, cfnresponse.FAILED, responseData, provider_arn)

  ProviderCreatorLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:*SamlProvider
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  AdminRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
        - ''
        - - AWS_
          - Ref: AccountAlias
          - _Admin_
          - Ref: AWS::AccountId
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Federated:
              Fn::Join:
              - ''
              - - 'arn:aws:iam::'
                - Ref: AWS::AccountId
                - ":saml-provider/Gsuite"
          Action: sts:AssumeRoleWithSAML
          Condition:
            StringEquals:
              SAML:aud: https://signin.aws.amazon.com/saml
      Policies:
      - PolicyName: Admin_policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action: "*"
            Effect: Allow
            Resource: "*"

  DeveloperRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
        - ''
        - - AWS_
          - Ref: AccountAlias
          - _Developer_
          - Ref: AWS::AccountId
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Federated:
              Fn::Join:
              - ''
              - - 'arn:aws:iam::'
                - Ref: AWS::AccountId
                - ":saml-provider/Gsuite"
          Action: sts:AssumeRoleWithSAML
          Condition:
            StringEquals:
              SAML:aud: https://signin.aws.amazon.com/saml
      Policies:
      - PolicyName: Developer_policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: DeveloperSid
            Effect: Allow
            Action:
            - codepipeline:*
            - codebuild:*
            - codedeploy:*
            - Lambda:*
            - rds:*
            - eks:*
            - s3:*
            - ec2:createSecurityGroup
            - ec2:AuthorizeSecurityGroupIngress
            - ec2:AuthorizeSecurityGroupEgress
            - ec2:RevokeSecurityGroupIngress
            - ec2:RevokeSecurityGroupEgress
            - cloudwatch:Get*
            - cloudwatch:List*
            - cloudtrail:GetTrailStatus
            - cloudtrail:DescribeTrails
            - cloudtrail:LookupEvents
            - cloudtrail:ListTags
            - cloudtrail:ListPublicKeys
            - cloudtrail:GetEventSelectors
            Resource: "*"
          - Sid: SecretsListSid
            Effect: Allow
            Action:
            - secretsmanager:ListSecretVersionIds
            - secretsmanager:DescribeSecret
            Resource: "*"
          - Sid: SecretsROSid
            Effect: Allow
            Action:
            - secretsmanager:Get*
            Resource:
            - arn:aws:secretsmanager:us-east-1:666665886686:secret:creds/geonames/geonames-root.json-gAif8N
            - arn:aws:secretsmanager:us-east-1:666665886686:secret:creds/geonames/production-geonames-geodecode-postgres-root.json-gcY5c1

  DevopsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
        - ''
        - - AWS_
          - Ref: AccountAlias
          - _Devops_
          - Ref: AWS::AccountId
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Federated:
              Fn::Join:
              - ''
              - - 'arn:aws:iam::'
                - Ref: AWS::AccountId
                - ":saml-provider/Gsuite"
          Action: sts:AssumeRoleWithSAML
          Condition:
            StringEquals:
              SAML:aud: https://signin.aws.amazon.com/saml
      Policies:
      - PolicyName: Devops_policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ec2:createSecurityGroup
            - ec2:AuthorizeSecurityGroupIngress
            - ec2:AuthorizeSecurityGroupEgress
            - ec2:RevokeSecurityGroupIngress
            - ec2:RevokeSecurityGroupEgress
            Resource: "*"
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:GetBucketLocation
            Resource: "*"
          - Effect: Allow
            Action:
            - cloudtrail:GetTrailStatus
            - cloudtrail:DescribeTrails
            - cloudtrail:LookupEvents
            - cloudtrail:ListTags
            - cloudtrail:ListPublicKeys
            - cloudtrail:GetEventSelectors
            - s3:ListAllMyBuckets
            - kms:ListAliases
            - lambda:ListFunctions
            Resource: "*"
          - Effect: Allow
            Action:
            - secretsmanager:Create*
            - secretsmanager:Delete*
            - secretsmanager:Describe*
            - secretsmanager:Get*
            - secretsmanager:List*
            Resource: "*"

  FinanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
        - ''
        - - AWS_
          - Ref: AccountAlias
          - _Finance_
          - Ref: AWS::AccountId
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Federated:
              Fn::Join:
              - ''
              - - 'arn:aws:iam::'
                - Ref: AWS::AccountId
                - ":saml-provider/Gsuite"
          Action: sts:AssumeRoleWithSAML
          Condition:
            StringEquals:
              SAML:aud: https://signin.aws.amazon.com/saml
      Policies:
      - PolicyName: Finance_policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: FinanceSid
            Effect: Allow
            Action:
            - aws-portal:ModifyBilling
            - aws-portal:ViewPaymentMethods
            - aws-portal:ModifyAccount
            - aws-portal:ViewAccount
            - aws-portal:ViewBilling
            - aws-portal:ViewUsage
            - aws-portal:ViewBudget
            Resource: "*"

  IAMFullAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
        - ''
        - - AWS_
          - Ref: AccountAlias
          - _IAMFullAccess_
          - Ref: AWS::AccountId
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Federated:
              Fn::Join:
              - ''
              - - 'arn:aws:iam::'
                - Ref: AWS::AccountId
                - ":saml-provider/Gsuite"
          Action: sts:AssumeRoleWithSAML
          Condition:
            StringEquals:
              SAML:aud: https://signin.aws.amazon.com/saml
      Policies:
      - PolicyName: IAMFullAccess_policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: IAMFullAccessSid
            Effect: Allow
            Action: iam:*
            Resource: "*"

  MarketPlaceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
        - ''
        - - AWS_
          - Ref: AccountAlias
          - _MarketPlace_
          - Ref: AWS::AccountId
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Federated:
              Fn::Join:
              - ''
              - - 'arn:aws:iam::'
                - Ref: AWS::AccountId
                - ":saml-provider/Gsuite"
          Action: sts:AssumeRoleWithSAML
          Condition:
            StringEquals:
              SAML:aud: https://signin.aws.amazon.com/saml
      Policies:
      - PolicyName: MarketPlace_policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - aws-marketplace:*
            - cloudformation:CreateStack
            - cloudformation:DescribeStackResource
            - cloudformation:DescribeStackResources
            - cloudformation:DescribeStacks
            - cloudformation:List*
            - ec2:AuthorizeSecurityGroupEgress
            - ec2:AuthorizeSecurityGroupIngress
            - ec2:CreateSecurityGroup
            - ec2:CreateTags
            - ec2:DescribeAccountAttributes
            - ec2:DescribeAddresses
            - ec2:DeleteSecurityGroup
            - ec2:DescribeAccountAttributes
            - ec2:DescribeImages
            - ec2:DescribeInstances
            - ec2:DescribeKeyPairs
            - ec2:DescribeSecurityGroups
            - ec2:DescribeSubnets
            - ec2:DescribeTags
            - ec2:DescribeVpcs
            - ec2:RunInstances
            - ec2:StartInstances
            - ec2:StopInstances
            - ec2:TerminateInstances
            Resource: "*"
          - Effect: Allow
            Action:
            - ec2:CopyImage
            - ec2:DeregisterImage
            - ec2:DescribeSnapshots
            - ec2:DeleteSnapshot
            - ec2:CreateImage
            - ec2:DescribeInstanceStatus
            - ssm:GetAutomationExecution
            - ssm:UpdateDocumentDefaultVersion
            - ssm:CreateDocument
            - ssm:StartAutomationExecution
            - ssm:ListDocuments
            - ssm:UpdateDocument
            - ssm:DescribeDocument
            - sns:ListTopics
            - sns:GetTopicAttributes
            - sns:CreateTopic
            - iam:GetRole
            - iam:GetInstanceProfile
            - iam:ListRoles
            - iam:ListInstanceProfiles
            Resource: "*"
          - Effect: Allow
            Action:
            - s3:ListBucket
            - s3:GetObject
            Resource:
            - arn:aws:s3:::*image-build*
          - Effect: Allow
            Action:
            - sns:Publish
            - sns:setTopicAttributes
            Resource: arn:aws:sns:*:*:*image-build*
          - Effect: Allow
            Action:
            - iam:PassRole
            Resource:
            - "*"
            Condition:
              StringLike:
                iam:PassedToService:
                - ec2.amazonaws.com
                - ssm.amazonaws.com

  ReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
        - ''
        - - AWS_
          - Ref: AccountAlias
          - _ReadOnly_
          - Ref: AWS::AccountId
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Federated:
              Fn::Join:
              - ''
              - - 'arn:aws:iam::'
                - Ref: AWS::AccountId
                - ":saml-provider/Gsuite"
          Action: sts:AssumeRoleWithSAML
          Condition:
            StringEquals:
              SAML:aud: https://signin.aws.amazon.com/saml
      Policies:
      - PolicyName: ReadOnly_policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: readonlySid
            Effect: Allow
            Action:
            - a4b:Get*
            - a4b:List*
            - a4b:Describe*
            - a4b:Search*
            - acm:Describe*
            - acm:Get*
            - acm:List*
            - apigateway:GET
            - amplify:GetApp
            - amplify:GetBranch
            - amplify:GetJob
            - amplify:GetDomainAssociation
            - amplify:ListApps
            - amplify:ListBranches
            - amplify:ListDomainAssociations
            - amplify:ListJobs
            - application-autoscaling:Describe*
            - autoscaling-plans:Describe*
            - autoscaling-plans:GetScalingPlanResourceForecastData
            - appstream:Describe*
            - appstream:Get*
            - appstream:List*
            - appsync:Get*
            - appsync:List*
            - athena:List*
            - athena:Batch*
            - athena:Get*
            - autoscaling:Describe*
            - batch:List*
            - batch:Describe*
            - cloud9:Describe*
            - cloud9:List*
            - clouddirectory:List*
            - clouddirectory:BatchRead
            - clouddirectory:Get*
            - clouddirectory:LookupPolicy
            - cloudformation:Describe*
            - cloudformation:Detect*
            - cloudformation:Get*
            - cloudformation:List*
            - cloudformation:Estimate*
            - cloudformation:Preview*
            - cloudfront:Get*
            - cloudfront:List*
            - cloudhsm:List*
            - cloudhsm:Describe*
            - cloudhsm:Get*
            - cloudsearch:Describe*
            - cloudsearch:List*
            - cloudtrail:Describe*
            - cloudtrail:Get*
            - cloudtrail:List*
            - cloudtrail:LookupEvents
            - cloudwatch:Describe*
            - cloudwatch:Get*
            - cloudwatch:List*
            - codebuild:BatchGet*
            - codebuild:List*
            - codecommit:BatchGet*
            - codecommit:Describe*
            - codecommit:Get*
            - codecommit:GitPull
            - codecommit:List*
            - codedeploy:BatchGet*
            - codedeploy:Get*
            - codedeploy:List*
            - codepipeline:List*
            - codepipeline:Get*
            - codestar:List*
            - codestar:Describe*
            - codestar:Get*
            - codestar:Verify*
            - cognito-identity:Describe*
            - cognito-identity:Get*
            - cognito-identity:List*
            - cognito-identity:Lookup*
            - cognito-sync:List*
            - cognito-sync:Describe*
            - cognito-sync:Get*
            - cognito-sync:QueryRecords
            - cognito-idp:AdminGet*
            - cognito-idp:AdminList*
            - cognito-idp:List*
            - cognito-idp:Describe*
            - cognito-idp:Get*
            - config:Deliver*
            - config:Describe*
            - config:Get*
            - config:List*
            - connect:List*
            - connect:Describe*
            - connect:GetFederationToken
            - datasync:Describe*
            - datasync:List*
            - datapipeline:Describe*
            - datapipeline:EvaluateExpression
            - datapipeline:Get*
            - datapipeline:List*
            - datapipeline:QueryObjects
            - datapipeline:Validate*
            - dax:BatchGetItem
            - dax:Describe*
            - dax:GetItem
            - dax:ListTags
            - dax:Query
            - dax:Scan
            - directconnect:Describe*
            - devicefarm:List*
            - devicefarm:Get*
            - discovery:Describe*
            - discovery:List*
            - discovery:Get*
            - dlm:Get*
            - dms:Describe*
            - dms:List*
            - dms:Test*
            - ds:Check*
            - ds:Describe*
            - ds:Get*
            - ds:List*
            - ds:Verify*
            - dynamodb:BatchGet*
            - dynamodb:Describe*
            - dynamodb:Get*
            - dynamodb:List*
            - dynamodb:Query
            - dynamodb:Scan
            - ec2:Describe*
            - ec2:Get*
            - ec2:SearchTransitGatewayRoutes
            - ec2messages:Get*
            - ecr:BatchCheck*
            - ecr:BatchGet*
            - ecr:Describe*
            - ecr:Get*
            - ecr:List*
            - ecs:Describe*
            - ecs:List*
            - eks:DescribeCluster
            - eks:DescribeUpdates
            - eks:ListClusters
            - eks:ListUpdates
            - elasticache:Describe*
            - elasticache:List*
            - elasticbeanstalk:Check*
            - elasticbeanstalk:Describe*
            - elasticbeanstalk:List*
            - elasticbeanstalk:Request*
            - elasticbeanstalk:Retrieve*
            - elasticbeanstalk:Validate*
            - elasticfilesystem:Describe*
            - elasticloadbalancing:Describe*
            - elasticmapreduce:Describe*
            - elasticmapreduce:List*
            - elasticmapreduce:View*
            - elastictranscoder:List*
            - elastictranscoder:Read*
            - es:Describe*
            - es:List*
            - es:Get*
            - es:ESHttpGet
            - es:ESHttpHead
            - events:Describe*
            - events:List*
            - events:Test*
            - firehose:Describe*
            - firehose:List*
            - fsx:Describe*
            - fsx:List*
            - gamelift:List*
            - gamelift:Get*
            - gamelift:Describe*
            - gamelift:RequestUploadCredentials
            - gamelift:ResolveAlias
            - gamelift:Search*
            - glacier:List*
            - glacier:Describe*
            - glacier:Get*
            - glue:BatchGetPartition
            - glue:GetCatalogImportStatus
            - glue:GetClassifier
            - glue:GetClassifiers
            - glue:GetCrawler
            - glue:GetCrawlers
            - glue:GetCrawlerMetrics
            - glue:GetDatabase
            - glue:GetDatabases
            - glue:GetDataCatalogEncryptionSettings
            - glue:GetDataflowGraph
            - glue:GetDevEndpoint
            - glue:GetDevEndpoints
            - glue:GetJob
            - glue:GetJobs
            - glue:GetJobRun
            - glue:GetJobRuns
            - glue:GetMapping
            - glue:GetPartition
            - glue:GetPartitions
            - glue:GetPlan
            - glue:GetResourcePolicy
            - glue:GetSecurityConfiguration
            - glue:GetSecurityConfigurations
            - glue:GetTable
            - glue:GetTables
            - glue:GetTableVersion
            - glue:GetTableVersions
            - glue:GetTags
            - glue:GetTrigger
            - glue:GetTriggers
            - glue:GetUserDefinedFunction
            - glue:GetUserDefinedFunctions
            - greengrass:Get*
            - greengrass:List*
            - guardduty:Get*
            - guardduty:List*
            - health:Describe*
            - health:Get*
            - health:List*
            - iam:Generate*
            - iam:Get*
            - iam:List*
            - iam:Simulate*
            - importexport:Get*
            - importexport:List*
            - inspector:Describe*
            - inspector:Get*
            - inspector:List*
            - inspector:Preview*
            - inspector:LocalizeText
            - iot:Describe*
            - iot:Get*
            - iot:List*
            - iotanalytics:Describe*
            - iotanalytics:List*
            - iotanalytics:Get*
            - iotanalytics:SampleChannelData
            - kafka:Describe*
            - kafka:List*
            - kafka:Get*
            - kinesisanalytics:Describe*
            - kinesisanalytics:Discover*
            - kinesisanalytics:Get*
            - kinesisanalytics:List*
            - kinesisvideo:Describe*
            - kinesisvideo:Get*
            - kinesisvideo:List*
            - kinesis:Describe*
            - kinesis:Get*
            - kinesis:List*
            - kms:Describe*
            - kms:Get*
            - kms:List*
            - lambda:List*
            - lambda:Get*
            - lex:Get*
            - lightsail:Get*
            - lightsail:Is*
            - lightsail:Download*
            - logs:Describe*
            - logs:Get*
            - logs:FilterLogEvents
            - logs:ListTagsLogGroup
            - logs:StartQuery
            - logs:TestMetricFilter
            - machinelearning:Describe*
            - machinelearning:Get*
            - mgh:Describe*
            - mgh:List*
            - mobileanalytics:Get*
            - mobilehub:Describe*
            - mobilehub:Export*
            - mobilehub:Generate*
            - mobilehub:Get*
            - mobilehub:List*
            - mobilehub:Validate*
            - mobilehub:Verify*
            - mobiletargeting:Get*
            - mq:Describe*
            - mq:List*
            - opsworks:Describe*
            - opsworks:Get*
            - opsworks-cm:Describe*
            - organizations:Describe*
            - organizations:List*
            - pi:DescribeDimensionKeys
            - pi:GetResourceMetrics
            - polly:Describe*
            - polly:Get*
            - polly:List*
            - polly:SynthesizeSpeech
            - rekognition:CompareFaces
            - rekognition:Detect*
            - rekognition:List*
            - rekognition:Search*
            - rds:Describe*
            - rds:List*
            - rds:Download*
            - redshift:Describe*
            - redshift:GetReservedNodeExchangeOfferings
            - redshift:View*
            - resource-groups:Describe*
            - resource-groups:Get*
            - resource-groups:List*
            - resource-groups:Search*
            - robomaker:BatchDescribe*
            - robomaker:Describe*
            - robomaker:List*
            - route53:Get*
            - route53:List*
            - route53:Test*
            - route53domains:Check*
            - route53domains:Get*
            - route53domains:List*
            - route53domains:View*
            - s3:Get*
            - s3:List*
            - s3:Head*
            - sagemaker:Describe*
            - sagemaker:List*
            - sdb:Get*
            - sdb:List*
            - sdb:Select*
            - secretsmanager:List*
            - secretsmanager:Describe*
            - secretsmanager:GetResourcePolicy
            - securityhub:Get*
            - securityhub:List*
            - serverlessrepo:List*
            - serverlessrepo:Get*
            - serverlessrepo:SearchApplications
            - servicecatalog:List*
            - servicecatalog:Scan*
            - servicecatalog:Search*
            - servicecatalog:Describe*
            - servicediscovery:Get*
            - servicediscovery:List*
            - ses:Get*
            - ses:List*
            - ses:Describe*
            - shield:Describe*
            - shield:Get*
            - shield:List*
            - snowball:Get*
            - snowball:Describe*
            - snowball:List*
            - sns:Get*
            - sns:List*
            - sns:Check*
            - sqs:Get*
            - sqs:List*
            - sqs:Receive*
            - ssm:Describe*
            - ssm:Get*
            - ssm:List*
            - states:List*
            - states:Describe*
            - states:GetExecutionHistory
            - storagegateway:Describe*
            - storagegateway:List*
            - sts:Get*
            - swf:Count*
            - swf:Describe*
            - swf:Get*
            - swf:List*
            - tag:Get*
            - transfer:Describe*
            - transfer:List*
            - transfer:TestIdentityProvider
            - transcribe:Get*
            - transcribe:List*
            - trustedadvisor:Describe*
            - waf:Get*
            - waf:List*
            - waf-regional:List*
            - waf-regional:Get*
            - workdocs:Describe*
            - workdocs:Get*
            - workdocs:CheckAlias
            - worklink:Describe*
            - worklink:List*
            - workmail:Describe*
            - workmail:Get*
            - workmail:List*
            - workmail:Search*
            - workspaces:Describe*
            - xray:BatchGet*
            - xray:Get*
            Resource: "*"

  SecOpsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
        - ''
        - - AWS_
          - Ref: AccountAlias
          - _Secops_
          - Ref: AWS::AccountId
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Federated:
              Fn::Join:
              - ''
              - - 'arn:aws:iam::'
                - Ref: AWS::AccountId
                - ":saml-provider/Gsuite"
          Action: sts:AssumeRoleWithSAML
          Condition:
            StringEquals:
              SAML:aud: https://signin.aws.amazon.com/saml
      Policies:
      - PolicyName: Secops_policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action: ec2:*
            Effect: Allow
            Resource: "*"
          - Effect: Allow
            Action: cloudwatch:*
            Resource: "*"
          - Effect: Allow
            Action: cloudtrail:*
            Resource: "*"
          - Sid: SecOpsSid
            Effect: Allow
            Action:
            - s3:Get*
            - s3:List*
            - config:Get*
            - config:List*
            - config:Describe*
            Resource: "*"

  S3fullAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
        - ''
        - - AWS_
          - Ref: AccountAlias
          - _S3fullAccess_
          - Ref: AWS::AccountId
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Federated:
              Fn::Join:
              - ''
              - - 'arn:aws:iam::'
                - Ref: AWS::AccountId
                - ":saml-provider/Gsuite"
          Action: sts:AssumeRoleWithSAML
          Condition:
            StringEquals:
              SAML:aud: https://signin.aws.amazon.com/saml
      Policies:
      - PolicyName: S3fullAccess_policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: s3:*
            Resource: "*"

  S3ReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
        - ''
        - - AWS_
          - Ref: AccountAlias
          - _S3ReadOnly_
          - Ref: AWS::AccountId
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Federated:
              Fn::Join:
              - ''
              - - 'arn:aws:iam::'
                - Ref: AWS::AccountId
                - ":saml-provider/Gsuite"
          Action: sts:AssumeRoleWithSAML
          Condition:
            StringEquals:
              SAML:aud: https://signin.aws.amazon.com/saml
      Policies:
      - PolicyName: S3ReadOnly_policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:Get*
            - s3:List*
            Resource: "*"

  DevopsBotRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
        - ''
        - - AWS_
          - Ref: AccountAlias
          - _DevopsBot_
          - Ref: AWS::AccountId
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - "ec2.amazonaws.com"
          Action:
              - "sts:AssumeRole"
        - Effect: Allow
          Principal:
            AWS:
              - arn:aws:iam::666665886686:root
          Action:
            - "sts:AssumeRole"
      Policies:
      - PolicyName: DevopsBot_policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            -
                Action:
                - ec2:AssignPrivateIpAddresses
                - ec2:AssociateAddress
                - ec2:AssociateIamInstanceProfile
                - ec2:AssociateRouteTable
                - ec2:AssociateSubnetCidrBlock
                - ec2:AssociateTransitGatewayRouteTable
                - ec2:AssociateVpcCidrBlock
                - ec2:AttachClassicLinkVpc
                - ec2:AttachInternetGateway
                - ec2:AttachNetworkInterface
                - ec2:AttachVolume
                - ec2:AttachVpnGateway
                - ec2:AuthorizeClientVpnIngress
                - ec2:AuthorizeSecurityGroupIngress
                - ec2:CreateDefaultSubnet
                - ec2:CreateDefaultVpc
                - ec2:CreateImage
                - ec2:CreateInternetGateway
                - ec2:CreateKeyPair
                - ec2:CreateNatGateway
                - ec2:CreateNetworkInterface
                - ec2:CreateNetworkInterfacePermission
                - ec2:CreatePlacementGroup
                - ec2:CreateRouteTable
                - ec2:CreateSecurityGroup
                - ec2:CreateSnapshots
                - ec2:CreateSubnet
                - ec2:CreateTags
                - ec2:CreateTransitGateway
                - ec2:CreateVolume
                - ec2:DisassociateAddress
                Effect: Allow
                Resource: arn:aws:ec2:us-east-1:*:*
                Condition:
                  StringEquals:
                    ec2:Region:
                    - us-east-1
            -        
                Effect: Allow
                Action:
                - ec2:DetachVolume
                - ec2:AttachVolume
                - ec2:RebootInstances
                - ec2:AttachClassicLinkVpc
                - ec2:DetachClassicLinkVpc
                - ec2:CreateTags
                - ec2:DeleteKeyPair
                - ec2:DeleteVolume
                - ec2:TerminateInstances
                - ec2:RunInstances
                - ec2:StopInstances
                - ec2:ReplaceIamInstanceProfileAssociation
                - ec2:StartInstances
                - ec2:DisassociateIamInstanceProfile
                - ec2:AssociateIamInstanceProfile
                Resource: arn:aws:ec2:us-east-1:*:*
                Condition:
                  StringLike:
                    ec2:InstanceType:
                    - "*.nano"
                    - "*.small"
                    - "*.micro"
                    - "*.medium"
                    - t2.large
            -        
                Action:
                - iam:AddRoleToInstanceProfile
                - iam:AttachRolePolicy
                - iam:CreateInstanceProfile
                - iam:CreatePolicy
                - iam:CreateRole
                - iam:UpdateAssumeRolePolicy
                - iam:DeletePolicy
                - iam:DeleteRole
                - iam:DetachRolePolicy
                Effect: Allow
                Resource: arn:aws:iam::*:*
            -    
                Action:
                - elasticloadbalancing:AddTags
                - elasticloadbalancing:ApplySecurityGroupsToLoadBalancer
                - elasticloadbalancing:AttachLoadBalancerToSubnets
                - elasticloadbalancing:ConfigureHealthCheck
                - elasticloadbalancing:CreateLoadBalancer
                - elasticloadbalancing:CreateLoadBalancerListeners
                - elasticloadbalancing:SetLoadBalancerListenerSSLCertificate
                - elasticloadbalancing:SetLoadBalancerPoliciesOfListener
                - elasticloadbalancing:DeleteLoadBalancer
                - elasticloadbalancing:DeleteRule
                Effect: Allow
                Resource: arn:aws:elasticloadbalancing:us-east-1:*:*
            -    
                Action:
                - s3:CreateBucket
                - s3:ListAllMyBuckets
                - s3:ListBucket
                - s3:PutBucketPolicy
                - s3:PutEncryptionConfiguration
                - s3:PutObject
                - s3:PutObjectTagging
                - s3:DeleteBucket
                - s3:DeleteBucketPolicy
                - s3:DeleteObject
                - s3:DeleteObjectVersion
                Effect: Allow
                Resource: arn:aws:s3:::*
            -    
                Action:
                - lambda:CreateFunction
                - lambda:InvokeFunction
                - lambda:ListFunctions
                - lambda:UpdateFunctionCode
                - lambda:UpdateFunctionConfiguration
                Effect: Allow
                Resource: arn:aws:lambda:us-east-1:*:*:*
            -    
                Action:
                - sts:AssumeRole
                - sts:AssumeRoleWithSAML 
                Effect: Allow
                Resource: arn:aws:iam::*:*
            -    
                Action:
                - elasticache:AddTagsToResource
                - elasticache:CreateCacheCluster
                - elasticache:CreateCacheParameterGroup
                - elasticache:CreateCacheSecurityGroup
                - elasticache:CreateCacheSubnetGroup
                - elasticache:CreateReplicationGroup
                - elasticache:CreateSnapshot
                - elasticache:DescribeSnapshots
                - elasticache:IncreaseReplicaCount
                - elasticache:ModifyCacheCluster
                - elasticache:ModifyCacheSubnetGroup
                - elasticache:ModifyReplicationGroup
                - elasticache:DeleteCacheCluster
                - elasticache:DeleteReplicationGroup
                - elasticache:DeleteSnapshot 
                Effect: Allow
                Resource: "*"
            -    
                Action:
                - ecs:CreateCluster
                - ecs:CreateService
                - ecs:CreateTaskSet
                - ecs:DeregisterContainerInstance
                - ecs:DeregisterTaskDefinition
                - ecs:DescribeClusters
                - ecs:ListClusters
                - ecs:ListContainerInstances
                - ecs:ListServices
                - ecs:ListTaskDefinitions
                - ecs:ListTasks
                - ecs:RegisterContainerInstance
                - ecs:RegisterTaskDefinition
                - ecs:RunTask
                - ecs:StartTask
                - ecs:StopTask
                - ecs:UpdateService
                - ecs:UpdateTaskSet
                - ecs:DeleteAttributes
                - ecs:DeleteCluster
                - ecs:DeleteService
                - ecs:DeleteTaskSet  
                Effect: Allow
                Resource: arn:aws:ecs:us-east-1:*:*
            -    
                Action: 
                - eks:*    
                Effect: Allow
                Resource: arn:aws:eks:us-east-1:*:*
            -    
                Action:
                - rds:AddRoleToDBCluster
                - rds:AddRoleToDBInstance
                - rds:CreateDBClusterSnapshot
                - rds:CreateDBInstance
                - rds:CreateDBInstanceReadReplica
                - rds:CreateDBSecurityGroup
                - rds:CreateDBSnapshot
                - rds:CreateDBSubnetGroup
                - rds:CreateEventSubscription
                - rds:DownloadDBLogFilePortion
                - rds:ModifyDBInstance
                - rds:StartDBCluster
                - rds:StartDBInstance
                - rds:StopDBCluster
                - rds:StopDBInstance
                - rds:DeleteDBClusterSnapshot
                - rds:DeleteDBInstance
                - rds:DeleteDBSnapshot
                Effect: Allow
                Resource: arn:aws:rds:us-east-1:*:*
                
  DevopsBotInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: DevopsBotRole
          
  DataengineerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
        - ''
        - - AWS_
          - Ref: AccountAlias
          - _Dataengineer_
          - Ref: AWS::AccountId
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Federated:
              Fn::Join:
              - ''
              - - 'arn:aws:iam::'
                - Ref: AWS::AccountId
                - ":saml-provider/Gsuite"
          Action: sts:AssumeRoleWithSAML
          Condition:
            StringEquals:
              SAML:aud: https://signin.aws.amazon.com/saml
      Policies:
      - PolicyName: Dataengineer_policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:*
            - ec2:*
            - cloudwatch:*
            - athena:*
            - glue:*
            - redshift:*
            - sns:*
            - rds:Describe*
            Resource: "*"
          - Effect: Allow
            NotAction:
            - iam:*
            - organizations:*
            - account:*
            Resource: "*"
          - Effect: Allow
            Action:
            - iam:AttachRolePolicy
            - iam:CreatePolicy
            - iam:CreateRole
            - iam:DeletePolicy
            - iam:DeleteRole
            - iam:DeleteRolePolicy
            - iam:DetachRolePolicy
            - iam:GetPolicy
            - iam:GetRole
            - iam:GetRolePolicy
            - iam:ListAttachedRolePolicies
            - iam:ListPolicies
            - iam:ListRolePolicies
            - iam:ListRoles
            - iam:PassRole
            - iam:PutRolePolicy
            - iam:CreateServiceLinkedRole
            - iam:DeleteServiceLinkedRole
            - organizations:DescribeOrganization
            - iam:CreateAccessKey
            - iam:DeleteAccessKey
            - iam:GetAccessKeyLastUsed
            - iam:GetUser
            - iam:ListAccessKeys
            - iam:UpdateAccessKey
            - account:ListRegions
            Resource: "*"
